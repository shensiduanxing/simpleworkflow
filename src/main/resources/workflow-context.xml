<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 The myBatis Team Licensed under the Apache License, Version
	2.0 (the "License"); you may not use this file except in compliance with
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software distributed
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for
	the specific language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />
    	
	<bean id="workflowServiceRef" class="org.eason.workflowengine.domain.common.bl.impl.WorkflowService"> 
	    <property name="workFlowDao" ref="workflowMysqlDao"/>
	    <property name="workFlowExecutor" ref="workFlowExecutorRef"/>
	    <property name="taskService" ref="taskServiceRef"/>
	</bean>
	
	<bean id="taskServiceRef" class="org.eason.workflowengine.domain.common.bl.impl.TaskService"> 
	    <property name="taskDao" ref="taskMysqlDao"/>
	    <property name="taskEventDao" ref="taskEventMysqlDao"/>
	    <property name="sequenceFlowDao" ref="sequenceFlowMysqlDao"/>
	</bean>
	
	<bean id="sequenceFlowServiceRef" class="org.eason.workflowengine.domain.common.bl.impl.SequenceFlowService"> 
	    <property name="sequenceFlowDao" ref="sequenceFlowMysqlDao"/>
	</bean>
	
	<bean id="taskEventServiceRef" class="org.eason.workflowengine.domain.common.bl.impl.TaskEventService"> 
	    <property name="workflowService" ref="workflowServiceRef"/>
	    <property name="taskService" ref="taskServiceRef"/>
	    <property name="taskEventDao" ref="taskEventMysqlDao"/>
	</bean>
		
	<bean id="workFlowExecutorRef" class="org.eason.workflowengine.domain.common.bl.impl.WorkFlowExecutor"> 
	    <property name="executorService" ref="executorServiceRef"/>
	    <property name="taskService" ref="taskServiceRef"/>
	    <property name="distributeLock" ref="distributeLockRef" />
	    <property name="amqpTemplate" ref="amqpTemplate" />
	    <property name="taskQueueName" value="${amqp.queue.workflow.taskqueue}" />
	</bean>
		
	<bean id="executorServiceRef" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool"> 
	    <constructor-arg value="5"></constructor-arg> 
	</bean>
	
	<bean id="localFakeWorkFlowRestClientRef" class="org.eason.infrastructure.integration.LocalFakeWorkFlowRestClient">
	</bean>
	
	<bean id="callbackEndpointRef" class="org.eason.workflowengine.domain.common.model.CallbackEndpoint"> 
	    <property name="taskEventApiUrl" value="${callback.endpoint.taskevent.api.url}" />
	    <property name="username" value="${callback.endpoint.username}" />
	    <property name="password" value="${callback.endpoint.password}" />
	</bean>
	
	<bean id="memcachedClientRef" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
        <property name="servers">
                    <value>127.0.0.1:11211</value>
            </property>
        <property name="protocol" value="BINARY"/>
        <property name="transcoder">
          <bean class="net.spy.memcached.transcoders.SerializingTranscoder">
            <property name="compressionThreshold" value="1024"/>
          </bean>
        </property>
        <property name="opTimeout" value="1000"/>
        <property name="timeoutExceptionThreshold" value="1998"/>
        <property name="hashAlg" value="KETAMA_HASH"/>
        <property name="locatorType" value="CONSISTENT"/>
        <property name="failureMode" value="Redistribute"/>
        <property name="useNagleAlgorithm" value="false"/>
     </bean>

     <bean id="distributeLockRef"
            class="org.eason.infrastructure.common.lock.DistributeLock">
            <property name="memcachedClient" ref="memcachedClientRef" />
     </bean>
    
</beans>
